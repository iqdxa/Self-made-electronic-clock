C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Program Files\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "STC15F2K.h"
   2          #include "intrins.h"
   3          #include <math.h>
   4          
   5          #define uchar unsigned char 
   6          #define uint unsigned int
   7          
   8          sfr ADC_LOW2    =   0xBE;           //ADC低2位结果
   9          
  10          #define ADC_POWER   0x80            //ADC电源控制位
  11          #define ADC_FLAG    0x10            //ADC完成标志
  12          #define ADC_START   0x08            //ADC起始控制位
  13          #define ADC_SPEEDLL 0x00            //540个时钟
  14          #define ADC_SPEEDL  0x20            //360个时钟
  15          #define ADC_SPEEDH  0x40            //180个时钟
  16          #define ADC_SPEEDHH 0x60            //90个时钟
  17          
  18          #define FOSC 22118400L
  19          #define T1MS (65536-FOSC/1000)      //1T模式
  20          //#define T1MS (65536-FOSC/12/1000) //12T模式    1
  21          #define BAUD 115200             //串口波特率
  22          #define S1_S0 0x40              //P_SW1.6
  23          #define S1_S1 0x80              //P_SW1.7
  24          
  25          sbit DS4=P3^4;     //正极
  26          sbit DS3=P3^5;
  27          sbit DS2=P3^6;
  28          sbit DS1=P3^7;
  29          
  30          sbit set=P3^0;
  31          sbit jia=P3^1;
  32          
  33          sbit zhuan=P3^3;
  34          sbit bell=P1^7;
  35          
  36          bit Time_Point_Blink=0;           //时间显示中间两点闪烁标志位
  37          bit Flag_Lum_AD=0;                //光敏AD采样允许位
  38          
  39          uchar dat1[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xf8,0X80,0X90,0xff,0xc6};      
  40          uchar dat2[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0X00,0X10,0xff};//有小数点
  41          
  42          uchar dat3[]={0x40,0x4F,0x24,0x06,0x0B,0x12,0x10,0x47,0X00,0X02,0xff};//有小数点
  43          uchar dat4[]={0xC0,0xCF,0xA4,0x86,0x8B,0x92,0x90,0xC7,0X80,0X82,0xff};// 
  44             
  45          uchar table[4]={0};
  46          unsigned int temp[3];
  47          uchar Temp_time1,Temp_time2;
  48          uchar Differ_Time=0;            //不同数字所需要延时时间
  49          uint Lum_Val_Buf[10]=0;
  50          uchar Lum_Count=0;              //亮度采样10次，求平均值
  51          uint lum_temp=0;                  //10次采样值之和
  52          
  53          extern void init_ds1302_io();
  54          extern void init_ds1302();
  55          extern void read_time();
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 2   

  56          extern void write_time();
  57          extern void read_nao();
  58          extern void write_setting();
  59          extern void read_setting();
  60          
  61          extern int fen;
  62          extern int shi;
  63          extern int miao;
  64          
  65          extern int nfen;
  66          extern int nshi;
  67          
  68          extern uchar nk;
  69          extern uchar gk;
  70          extern bit nx;
  71          extern bit sw;
  72          
  73          void Delayms(uint t)
  74          {
  75   1        uchar i;
  76   1        while(t--)
  77   1           for(i=0;i<123;i++);
  78   1      }
  79          
  80          void Delay_select(uchar i)
  81          {
  82   1        switch(i)
  83   1        {
  84   2          case 0:Differ_Time=5;break;
  85   2          case 1:Differ_Time=2;break;
  86   2          case 2:Differ_Time=5;break;
  87   2          case 3:Differ_Time=5;break;
  88   2          case 4:Differ_Time=4;break;
  89   2          case 5:Differ_Time=5;break;
  90   2          case 6:Differ_Time=5;break;
  91   2          case 7:Differ_Time=3;break;
  92   2          case 8:Differ_Time=5;break;
  93   2          case 9:Differ_Time=5;break;
  94   2          default:break;
  95   2        }
  96   1      }
  97           
  98          char flag=1;
  99          void wd_display()
 100          {
 101   1        P2=0XFF;
 102   1        DS1=1;
 103   1        DS2=0;
 104   1        DS3=0;
 105   1        DS4=0;
 106   1        P2=dat1[table[0]];
 107   1        Delay_select(table[0]);
 108   1        Delayms(Differ_Time);
 109   1      
 110   1        P2=0XFF;
 111   1        DS1=0;
 112   1        DS2=1;
 113   1        DS3=0;
 114   1        DS4=0;
 115   1        P2=dat2[table[1]];
 116   1        Delay_select(table[1]);
 117   1        Delayms(Differ_Time+1);
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 3   

 118   1      
 119   1        P2=0XFF;
 120   1        DS1=0;
 121   1        DS2=0;
 122   1        DS3=1;
 123   1        DS4=0;
 124   1        P2=dat4[table[2]];
 125   1        Delay_select(table[2]);
 126   1        Delayms(Differ_Time);
 127   1      
 128   1        P2=0XFF;
 129   1        DS1=0;
 130   1        DS2=0;
 131   1        DS3=0;
 132   1        DS4=1;
 133   1        P2=dat1[table[3]];
 134   1        Delayms(4);
 135   1      
 136   1        DS1=0;
 137   1        DS2=0;
 138   1        DS3=0;
 139   1        DS4=0;
 140   1      }
 141          int ld;
 142          void display()
 143          {
 144   1        P2=0XFF;
 145   1        DS1=1;
 146   1        DS2=0;
 147   1        DS3=0;
 148   1        DS4=0;
 149   1        P2=dat1[table[0]];
 150   1        Delay_select(table[0]);
 151   1        Delayms(Differ_Time);
 152   1      
 153   1        if(flag>0)               //时间显示中间两点亮
 154   1        {
 155   2          P2=0XFF;
 156   2          DS1=0;
 157   2          DS2=1;
 158   2          DS3=0;
 159   2          DS4=0;
 160   2          P2=dat2[table[1]];
 161   2          Delay_select(table[1]);
 162   2          Delayms(Differ_Time+1);
 163   2      
 164   2          P2=0XFF;
 165   2          DS1=0;
 166   2          DS2=0;
 167   2          DS3=1;
 168   2          DS4=0;
 169   2          P2=dat3[table[2]];
 170   2          Delay_select(table[2]);
 171   2          Delayms(Differ_Time+1);
 172   2      
 173   2        }
 174   1        else                  //时间不显示中间两点
 175   1        {
 176   2          P2=0XFF;
 177   2          DS1=0;
 178   2          DS2=1;
 179   2          DS3=0;
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 4   

 180   2          DS4=0;
 181   2          P2=dat1[table[1]];
 182   2          Delay_select(table[1]);
 183   2          Delayms(Differ_Time);
 184   2      
 185   2          P2=0XFF;
 186   2          DS1=0;
 187   2          DS2=0;
 188   2          DS3=1;
 189   2          DS4=0;
 190   2          P2=dat4[table[2]];
 191   2          Delay_select(table[2]);
 192   2          Delayms(Differ_Time);
 193   2      
 194   2        }
 195   1      
 196   1        P2=0XFF;
 197   1        DS1=0;
 198   1        DS2=0;
 199   1        DS3=0;
 200   1        DS4=1;
 201   1        P2=dat1[table[3]];
 202   1        Delay_select(table[3]);
 203   1        Delayms(Differ_Time);
 204   1        DS1=0;
 205   1        DS2=0;
 206   1        DS3=0;
 207   1        DS4=0;
 208   1      }
 209          void set_display()
 210          {
 211   1        DS1=1;
 212   1        DS2=0;
 213   1        DS3=0;
 214   1        DS4=0;
 215   1        P2=dat1[table[0]];
 216   1        Delayms(5);
 217   1      
 218   1        DS1=0;
 219   1        DS2=1;
 220   1        DS3=0;
 221   1        DS4=0;
 222   1        P2=dat2[table[1]];
 223   1      
 224   1        Delayms(5);
 225   1        DS1=0;
 226   1        DS2=0;
 227   1        DS3=1;
 228   1        DS4=0;
 229   1        P2=dat3[table[2]];
 230   1        Delayms(5);
 231   1      
 232   1        DS1=0;
 233   1        DS2=0;
 234   1        DS3=0;
 235   1        DS4=1;
 236   1        P2=dat1[table[3]];
 237   1        Delayms(5);
 238   1      
 239   1        DS1=0;
 240   1        DS2=0;
 241   1        DS3=0;
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 5   

 242   1        DS4=0;
 243   1      }
 244          void init()
 245          {
 246   1          TMOD= 0x01;          
 247   1          TL0 = (65536-50000)/256;        //设置定时初值
 248   1          TH0 = (65536-50000)%256;        //设置定时初值
 249   1          ET0 = 1;
 250   1          TR0 = 1;
 251   1          EA = 1;
 252   1      }
 253          
 254          //void init()
 255          //{
 256          ////    AUXR |= 0x80;                   //定时器0为1T模式
 257          //////  AUXR &= 0x7f;                   //定时器0为12T模式
 258          ////
 259          ////    TMOD = 0x00;                    //设置定时器为模式0(16位自动重装载)
 260          ////    TL0 = T1MS;                     //初始化计时值
 261          ////    TH0 = T1MS >> 8;
 262          ////    TR0 = 1;                        //定时器0开始计时
 263          ////    ET0 = 1;                        //使能定时器0中断
 264          ////    EA = 1;
 265          //
 266          //  AUXR |= 0x80;   //定时器时钟1T模式
 267          //  TMOD &= 0xF0;   //设置定时器模式
 268          //  TL0 = 0x5C;   //设置定时初值
 269          //  TH0 = 0xF7;   //设置定时初值
 270          //  TF0 = 0;    //清除TF0标志
 271          //  TR0 = 1;    //定时器0开始计时
 272          //  ET0 = 1;                        //使能定时器0中断
 273          //    EA = 1;
 274          //}
 275          
 276          bit ps=0;
 277          char menu=0;
 278          //bit nf=0;//闹钟开标志：受水银影响
 279          //bit gk=0;//光控开标志
 280          //bit nk=0;//闹钟开标志：受设置影响
 281          //bit nx=1;//闹钟响标志：受时间影响
 282          void key()
 283          {
 284   1          if(set==0)
 285   1          {
 286   2            Delayms(5);
 287   2            if(set==0)
 288   2            {
 289   3              bell=0;
 290   3              menu++;
 291   3              if(menu==3){read_nao();}
 292   3              if(menu==8){menu=0;ET1 = 1;write_time();}
 293   3              while(set==0);  
 294   3              bell=1;
 295   3            } 
 296   2          }
 297   1      
 298   1          if(menu==0)
 299   1          {
 300   2            if(jia==0)
 301   2            {
 302   3              if(shi==nshi && fen==nfen)
 303   3              {
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 6   

 304   4                nx=1;
 305   4              }
 306   3            }
 307   2          } 
 308   1      
 309   1          if(menu==1)
 310   1          {
 311   2            if(jia==0)
 312   2            {
 313   3              bell=0;
 314   3              if(fen >= 0x59)
 315   3                fen = 0;
 316   3      
 317   3              else fen=fen+0x01;
 318   3              if((fen & 0x0f) >= 0x0a)
 319   3                fen = (fen & 0xf0) + 0x10;
 320   3              while(jia==0);
 321   3              miao=0;//秒钟归零
 322   3              bell=1;
 323   3            }     
 324   2          }
 325   1          if(menu==2)
 326   1          {
 327   2            if(jia==0)
 328   2            {
 329   3              bell=0;
 330   3              shi+=0x01;
 331   3              if((shi & 0x0f) >= 0x0a)
 332   3                shi = (shi & 0xf0) + 0x10;
 333   3      
 334   3              if(shi >= 0x24)
 335   3                shi = 0;
 336   3              while(jia==0);
 337   3              miao=0;//秒钟归零
 338   3              bell=1;
 339   3            }   
 340   2          }
 341   1          if(menu==3) //闹钟
 342   1          {
 343   2            if(jia==0)
 344   2            {
 345   3              bell=0;
 346   3              if(nfen >= 0x59)
 347   3                nfen = 0;
 348   3      
 349   3              else nfen=nfen+0x01;
 350   3              if((nfen & 0x0f) >= 0x0a)
 351   3                nfen = (nfen & 0xf0) + 0x10;
 352   3              while(jia==0);
 353   3              bell=1; 
 354   3            }
 355   2          }
 356   1          if(menu==4)
 357   1          {
 358   2            if(jia==0)
 359   2            {
 360   3              bell=0;
 361   3              nshi+=0x01;
 362   3              if((nshi & 0x0f) >= 0x0a)
 363   3                nshi = (nshi & 0xf0) + 0x10;
 364   3      
 365   3              if(nshi >= 0x24)
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 7   

 366   3                nshi = 0;
 367   3              while(jia==0);
 368   3              bell=1;
 369   3            } 
 370   2          }
 371   1          if(menu==5)
 372   1          {
 373   2            if(jia==0)
 374   2            {
 375   3              while(jia==0);
 376   3              gk=!gk;
 377   3            } 
 378   2          }
 379   1          if(menu==6)
 380   1          {
 381   2            if(jia==0)
 382   2            {
 383   3              while(jia==0);
 384   3              nk=!nk;
 385   3            }
 386   2            if(nk==1)
 387   2            {
 388   3              nx=0;
 389   3            }
 390   2            else if(nk==0)
 391   2            {
 392   3              nx=1; //不响
 393   3            } 
 394   2          }
 395   1          if(menu==7)
 396   1          {
 397   2            if(jia==0)
 398   2            {
 399   3              while(jia==0);
 400   3              sw=!sw;     //
 401   3            }
 402   2          }
 403   1      
 404   1          write_setting();   //断电保存
 405   1      //  } 
 406   1      }
 407          void InitADC()
 408          {
 409   1          P1ASF = 0x7f;                 //Open channels ADC function 0100 0000 p1.6使用AD功能
 410   1        ADC_RES  = 0;                       //Clear previous result
 411   1        ADC_LOW2 = 0;
 412   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
 413   1      }
 414          
 415          
 416          void GetADCResult(unsigned char ch,unsigned int *value)
 417          {
 418   1        ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ch | ADC_START;
 419   1          _nop_();                        //Must wait before inquiry
 420   1          _nop_();
 421   1          _nop_();
 422   1          _nop_();
 423   1          _nop_();                        //Must wait before inquiry
 424   1          _nop_();
 425   1          while(!(ADC_CONTR & ADC_FLAG));//Wait complete flag
 426   1          ADC_CONTR &= ~ADC_FLAG;         //Close ADC
 427   1      
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 8   

 428   1        *value = 0;
 429   1        *value = ADC_RES;
 430   1        *value = ((*value)*4 + ADC_LOW2);   //Return ADC result.×￠êíμ?′????ò・μ??8??ADC?á1?
 431   1      }
 432          
 433          void ADC_convert(void)
 434          {
 435   1        GetADCResult(3,&temp[0]);     //热敏AD采样
 436   1        temp[0] = (unsigned int) ( ( 3950.0 / ( 11.33657 + log( 6.04 * (float)temp[0] / ( 1024.0 - (float)temp[0]
             - ) ) ) - 278.15) * 100 );//273.15
 437   1      }
 438          
 439          bit flag1=1;
 440          bit w_flag=0;
 441          void main()
 442          { 
 443   1        uchar i=0;
 444   1      
 445   1      //
 446   1        P2M0=0xFF;
 447   1        P2M1=0x00; 
 448   1      //  
 449   1        P3M0 = 0xF0;      
 450   1        P3M1 = 0x00;
 451   1      
 452   1        init();
 453   1        InitADC();
 454   1        init_ds1302_io();
 455   1        init_ds1302();
 456   1        read_nao();
 457   1        read_setting();
 458   1        if(gk>2)
 459   1        {gk=0;nk=0;nx=1;sw=0;}
 460   1        while(1)
 461   1        {
 462   2      
 463   2          key();
 464   2      
 465   2            if(menu==0)
 466   2            {  
 467   3                if((flag1==0)&&(sw==0))   //flag1=0，显示温度
 468   3              {
 469   4                if(w_flag==0)      //定时刷新温度值
 470   4                {
 471   5                  ADC_convert();
 472   5                  w_flag=1;
 473   5                }
 474   4                
 475   4                table[0]=temp[0]/1000;
 476   4                table[1]=temp[0]%1000/100;
 477   4                table[2]=temp[0]%1000%100/10;
 478   4                table[3]=11;
 479   4                wd_display();
 480   4                Delayms(ld);        
 481   4              }
 482   3        
 483   3              if((flag1==1)||(sw==1))
 484   3              { 
 485   4                if(Flag_Lum_AD==1)
 486   4                {
 487   5                  lum_temp=0;
 488   5                  Flag_Lum_AD=0;
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 9   

 489   5      
 490   5                  GetADCResult(2,&Lum_Val_Buf[Lum_Count++]);     //光敏AD采样 
 491   5      
 492   5                  if(Lum_Count>=10)                 //采样10次后，算出平均值
 493   5                  {
 494   6                    Lum_Count=0;
 495   6                    for(i=0;i<10;i++)
 496   6                    {
 497   7                      lum_temp=lum_temp+Lum_Val_Buf[i];
 498   7                    }
 499   6                    temp[2]=lum_temp/10;            
 500   6                  }
 501   5                }
 502   4      
 503   4                if(gk==1)//开光控
 504   4                {
 505   5      
 506   5                  switch(temp[2]/150)
 507   5                  {
 508   6                    case 4 :ld=120;break;
 509   6                    case 3 :ld=80;break;
 510   6                    case 2 :ld=40;break;
 511   6                    case 1 :ld=10;break;
 512   6                    case 0 :ld=2;break;
 513   6                    default :ld=180;break;
 514   6                  }
 515   5        
 516   5                }
 517   4                else ld=2;
 518   4      
 519   4                read_time();
 520   4      
 521   4                table[0]=shi/16;
 522   4                table[1]=shi%16;
 523   4                table[2]=fen/16;
 524   4                table[3]=fen%16;
 525   4      
 526   4                display();
 527   4                Delayms(ld);      
 528   4              }     
 529   3            }
 530   2            else
 531   2            {
 532   3              if(menu==1)
 533   3              { 
 534   4                if(flag>0)
 535   4                {
 536   5                  table[2]=fen/16;
 537   5                  table[3]=fen%16;
 538   5                }
 539   4                else
 540   4                {
 541   5                  table[2]=10;
 542   5                  table[3]=10;        
 543   5                }
 544   4                table[0]=shi/16;
 545   4                table[1]=shi%16;      
 546   4              }
 547   3              if(menu==2)
 548   3              {
 549   4                table[2]=fen/16;
 550   4                table[3]=fen%16;
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 10  

 551   4                if(flag>0)
 552   4                {
 553   5                  table[0]=shi/16;
 554   5                  table[1]=shi%16;        
 555   5                }
 556   4                else
 557   4                {
 558   5                  table[0]=10;
 559   5                  table[1]=10;  
 560   5                }
 561   4              }
 562   3              if(menu==3)
 563   3              { 
 564   4                if(flag>0)
 565   4                {
 566   5                  table[2]=nfen/16;
 567   5                  table[3]=nfen%16;
 568   5                }
 569   4                else
 570   4                {
 571   5                  table[2]=10;
 572   5                  table[3]=10;        
 573   5                }
 574   4                table[0]=nshi/16;
 575   4                table[1]=nshi%16;     
 576   4              }
 577   3              if(menu==4)
 578   3              {
 579   4                table[2]=nfen/16;
 580   4                table[3]=nfen%16;
 581   4                if(flag>0)
 582   4                {
 583   5                  table[0]=nshi/16;
 584   5                  table[1]=nshi%16;       
 585   5                }
 586   4                else
 587   4                {
 588   5                  table[0]=10;
 589   5                  table[1]=10;  
 590   5                }
 591   4              }
 592   3              if(menu==5)
 593   3              {
 594   4                table[0]=gk;
 595   4                table[1]=gk;
 596   4                table[2]=gk;
 597   4                table[3]=gk;  
 598   4              }
 599   3              if(menu==6)
 600   3              {
 601   4                table[0]=nk;
 602   4                table[1]=nk;
 603   4                table[2]=nk;
 604   4                table[3]=nk;  
 605   4              }
 606   3              if(menu==7)
 607   3              {
 608   4                table[0]=sw;
 609   4                table[1]=sw;
 610   4                table[2]=sw;
 611   4                table[3]=sw;  
 612   4              }
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2022 13:06:07 PAGE 11  

 613   3      
 614   3              set_display();      
 615   3            }       
 616   2      
 617   2        }
 618   1      }                                           
 619          
 620          uint t=0;
 621          uint t1=0;
 622          uchar t2;
 623          void InitTimer1() interrupt 1  // 1毫秒@11.0592MHz
 624          {
 625   1        static t_lum_count=0;
 626   1          TL0 = (65536-50000)/256;        //设置定时初值      //50ms   
 627   1          TH0 = (65536-50000)%256;        //设置定时初值
 628   1        t++;
 629   1        t1++;
 630   1        t_lum_count++;
 631   1        if(t_lum_count>2)       //定时采样光敏AD
 632   1        {
 633   2          t_lum_count=0;  
 634   2          Flag_Lum_AD=1;
 635   2        }
 636   1        if(t==40)          //11.0592Mhz   20     22.1182Mhz   40
 637   1        {
 638   2          t=0;
 639   2          w_flag=0;
 640   2          flag=!flag;        //时钟中间两点闪烁及选择闪烁标志位
 641   2          
 642   2            if((nx==0)&&(shi==nshi && fen==nfen))bell=!bell;    
 643   2            else{bell=1;}
 644   2      //    if(nx==0)bell=!bell;
 645   2        }
 646   1        if(t1>0 && t1<350)flag1=1;           //11.0592Mhz
 647   1        if(t1>350 && t1<500)flag1=0;   //430
 648   1        if(t1>500)t1=0;        //430
 649   1      
 650   1      
 651   1      }
 652          
 653          //void Uart() interrupt 3
 654          //{
 655          //  if (TI)
 656          //  {
 657          //      TI = 0;                 //清除TI位
 658          //      busy = 0;               //清忙标志
 659          //  }
 660          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1919    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     92       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
