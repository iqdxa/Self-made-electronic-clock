C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Program Files\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "STC15F2K.h"
   2          #include "intrins.h"
   3          #include <math.h>
   4          
   5          #define uchar unsigned char                     //无符号字符型 宏定义  变量范围0~255
   6          #define uint  unsigned int                      //无符号整型 宏定义     变量范围0~65535
   7          
   8          #define ADC_POWER   0x80                        //ADC电源控制位
   9          #define ADC_FLAG    0x10                        //ADC完成标志
  10          #define ADC_START   0x08                        //ADC起始控制位
  11          #define ADC_SPEEDLL 0x00                        //540个时钟
  12          #define ADC_SPEEDL  0x20                        //360个时钟
  13          #define ADC_SPEEDH  0x40                        //180个时钟
  14          #define ADC_SPEEDHH 0x60                        //90个时钟
  15          
  16          sfr ADC_LOW2    =   0xBE;                       //ADC低2位结果
  17          
  18          bit nx=0;
  19          bit sw=0;                                                       //温度时间切换
  20          
  21          sbit clk = P3^2;                                        //ds1302时钟线定义
  22          sbit io  = P5^5;                                        //数据线
  23          sbit rst = P5^4;                                        //复位线
  24          sbit DS4=P3^4;
  25          sbit DS3=P3^5;
  26          sbit DS2=P3^6;
  27          sbit DS1=P3^7;
  28          sbit sw1=P3^0;
  29          sbit sw2=P3^1;
  30          
  31          //                                              秒             分     时     日             月     年     星期
  32          uchar code init_ds[]  ={0x00,0x00,0x00,0x01,0x01,0x00,0x13};    //初始化
  33          uchar code write_add[]={0x80,0x82,0x84,0x86,0x88,0x8c,0x8a};    //写地址
  34          uchar code read_add[] ={0x81,0x83,0x85,0x87,0x89,0x8d,0x8b};    //读地址 
  35          uchar dat1[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xf8,0X80,0X90,0xff,0xc6,0xc7};//正立无小数点
  36          uchar dat2[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0X00,0X10,0xff};//正立有小数点
  37          uchar dat3[]={0x40,0x4F,0x24,0x06,0x0B,0x12,0x10,0x47,0X00,0X02,0xff};//倒立有小数点
  38          uchar dat4[]={0xC0,0xCF,0xA4,0x86,0x8B,0x92,0x90,0xC7,0X80,0X82,0xff};//倒立无小数点
  39          uchar Differ_Time=0;//不同数字所需要延时时间
  40          uchar table[4]={0};
  41          uchar nk=0;
  42          uchar gk=0;
  43          uchar menu=0;
  44          uchar i=0;
  45          uchar point_display=0;
  46          
  47          uint tem=0,lum=0;
  48          uint ld;
  49          uint fen,shi,miao,ri,yue,week,nian=0x20;
  50          uint display_min_sec=0;//显示分和秒
  51          uint display_tem=0;
  52          uint display_lum=0;
  53          uint collect=0;
  54          uint two_point_flag=0;
  55          uint cycle_display_flag=0;
C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 2   

  56          uint AD_collect_flag=0;
  57          
  58          void Delayms(uint t)
  59          {
  60   1              uchar i;
  61   1              while(t--)for(i=0;i<123;i++);
  62   1      }
  63          
  64          void Delay_select(uchar i)
  65          {
  66   1              switch(i)
  67   1              {
  68   2                      case 0:Differ_Time=5;break;
  69   2                      case 1:Differ_Time=2;break;
  70   2                      case 2:Differ_Time=5;break;
  71   2                      case 3:Differ_Time=5;break;
  72   2                      case 4:Differ_Time=4;break;
  73   2                      case 5:Differ_Time=5;break;
  74   2                      case 6:Differ_Time=5;break;
  75   2                      case 7:Differ_Time=3;break;
  76   2                      case 8:Differ_Time=5;break;
  77   2                      case 9:Differ_Time=5;break;
  78   2                      default:break;
  79   2              }
  80   1      }
  81          
  82          //position小数点位置,format时间显示的格式
  83          void display(uint position,uint format)
  84          {
  85   1              P2=0XFF;
  86   1              DS1=1;
  87   1              DS2=0;
  88   1              DS3=0;
  89   1              DS4=0;
  90   1              if(position==0)P2=dat2[table[0]];
  91   1              else P2=dat1[table[0]];
  92   1              Delay_select(table[0]);
  93   1              Delayms(Differ_Time);
  94   1      
  95   1              P2=0XFF;
  96   1              DS1=0;
  97   1              DS2=1;
  98   1              DS3=0;
  99   1              DS4=0;
 100   1              if(format==1)
 101   1              {
 102   2                      //是显示时间
 103   2                      if(point_display==1)P2=dat2[table[1]];
 104   2                      else if(point_display==0)P2=dat1[table[1]];
 105   2              }
 106   1              else if(format==0)
 107   1              {
 108   2                      //不是显示时间
 109   2                      if(position==1)P2=dat2[table[1]];
 110   2                      else P2=dat1[table[1]];
 111   2              }
 112   1              Delay_select(table[1]);
 113   1              Delayms(Differ_Time);
 114   1      
 115   1              P2=0XFF;
 116   1              DS1=0;
 117   1              DS2=0;
C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 3   

 118   1              DS3=1;
 119   1              DS4=0;
 120   1              //如果是显示时间，则第三个数码管一定要显示小数点，且小数点闪烁
 121   1              //如果不是显示时间，则根据需求显示
 122   1              if(format==1)
 123   1              {
 124   2                      if(point_display==1)P2=dat3[table[2]];
 125   2                      else if(point_display==0)P2=dat4[table[2]];
 126   2              }
 127   1              else if(format==0)
 128   1              {
 129   2                      if(position==2)P2=dat3[table[2]];
 130   2                      else P2=dat4[table[2]];
 131   2              }
 132   1              Delay_select(table[2]);
 133   1              Delayms(Differ_Time);
 134   1      
 135   1              P2=0XFF;
 136   1              DS1=0;
 137   1              DS2=0;
 138   1              DS3=0;
 139   1              DS4=1;
 140   1              if(position==3)P2=dat2[table[3]];
 141   1              else P2=dat1[table[3]];
 142   1              Delay_select(table[3]);
 143   1              Delayms(Differ_Time);
 144   1      
 145   1              DS1=0;
 146   1              DS2=0;
 147   1              DS3=0;
 148   1              DS4=0;
 149   1      }
 150          
 151          //写一个数据到对应的地址里
 152          void write_ds1302(uchar add,uchar dat)
 153          {
 154   1              uchar i;
 155   1              rst = 1;                                //把复位线拿高
 156   1              for(i=0;i<8;i++)
 157   1              {                                               //低位在前
 158   2                      clk = 0;                        //时钟线拿低开始写数据
 159   2                      io = add & 0x01;        
 160   2                      add >>= 1;                      //把地址右移一位
 161   2                      clk = 1;                        //时钟线拿高
 162   2              }       
 163   1              for(i=0;i<8;i++)
 164   1              {
 165   2                      clk = 0;                        //时钟线拿低开始写数据
 166   2                      io = dat & 0x01;        
 167   2                      dat >>= 1;                      //把数据右移一位
 168   2                      clk = 1;                        //时钟线拿高
 169   2              }
 170   1              rst = 0;                                //复位线合低
 171   1              clk = 0;
 172   1              io = 0;
 173   1      }
 174          
 175          //从对应的地址读一个数据出来
 176          uchar read_ds1302(uchar add)
 177          {
 178   1              uchar value,i;
 179   1              rst = 1;                                //把复位线拿高
C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 4   

 180   1              for(i=0;i<8;i++)
 181   1              {                                               //低位在前
 182   2                      clk = 0;                        //时钟线拿低开始写数据
 183   2                      io = add & 0x01;
 184   2                      add >>= 1;                      //把地址右移一位
 185   2                      clk = 1;                        //时钟线拿高
 186   2              }
 187   1              for(i=0;i<8;i++)
 188   1              {
 189   2                      clk = 0;                        //时钟线拿低开始读数据
 190   2                      value >>= 1;
 191   2                      if(io == 1)
 192   2                              value |= 0x80;
 193   2                      clk = 1;                        //时钟线拿高
 194   2              }
 195   1              rst = 0;                                //复位线合低
 196   1              clk = 0;
 197   1              io = 0;
 198   1              return value;                   //返回读出来的数据
 199   1      }
 200          
 201          void read_time()
 202          {
 203   1              miao = read_ds1302(read_add[0]);        //读秒
 204   1              fen  = read_ds1302(read_add[1]);        //读分
 205   1              shi  = read_ds1302(read_add[2]);        //读时
 206   1              ri   = read_ds1302(read_add[3]);        //读日
 207   1              yue  = read_ds1302(read_add[4]);        //读月
 208   1              nian = read_ds1302(read_add[5]);        //读年
 209   1              week = read_ds1302(read_add[6]);        //读星期
 210   1      }
 211          
 212          //把要写的时间 年月日 都写入ds1302里
 213          void write_time()
 214          {
 215   1              write_ds1302(0x8e,0x00);                        //关闭写保护
 216   1              write_ds1302(write_add[0],miao);        //写秒
 217   1              write_ds1302(write_add[1],fen);         //写分
 218   1              write_ds1302(write_add[2],shi);         //写时
 219   1              write_ds1302(write_add[3],ri);          //写日
 220   1              write_ds1302(write_add[4],yue);         //写月
 221   1              write_ds1302(write_add[5],nian);        //写年
 222   1              write_ds1302(write_add[6],week);        //写星期
 223   1              write_ds1302(0x8e,0x80);                        //打开写保护
 224   1      }
 225          
 226          void write_setting()
 227          {
 228   1              write_ds1302(0x8e,0x00);
 229   1              write_ds1302(0xcc,sw);
 230   1              write_ds1302(0xca,nx);
 231   1              write_ds1302(0xc8,gk);
 232   1              write_ds1302(0xc6,nk);
 233   1              write_ds1302(0x8e,0x80);
 234   1      }
 235          
 236          void read_setting()
 237          {
 238   1              nk = read_ds1302(0xc7);                                 //1100 0111 读取Ram3
 239   1              gk = read_ds1302(0xc9);                                 //1100 1001 读取Ram4
 240   1              nx = read_ds1302(0xcb);
 241   1              sw = read_ds1302(0xcd);
C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 5   

 242   1      }
 243          
 244          //把数据保存到ds1302 RAM中**0-31
 245          void write_ds1302ram(uchar add,uchar dat)
 246          {
 247   1              add <<= 1;              //地址是从第二位开始的
 248   1              add &= 0xfe;    //把最低位清零  是写的命令
 249   1              add |= 0xc0;    //地址最高两位为 1  
 250   1              write_ds1302(0x8e,0x00);
 251   1              write_ds1302(add,dat);
 252   1              write_ds1302(0x8e,0x80);
 253   1      }
 254          
 255          //把数据从ds1302 RAM读出来**0-31
 256          uchar read_ds1302ram(uchar add)
 257          {
 258   1              add <<= 1;              //地址是从第二位开始的
 259   1              add |= 0x01;    //把最高位置1  是读命令
 260   1              add |= 0xc0;    //地址最高两位为 1  
 261   1              return(read_ds1302(add));
 262   1      }
 263          
 264          void GetADCResult(unsigned char ch,unsigned int *value)
 265          {
 266   1              ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ch | ADC_START;
 267   1              _nop_();                                                                //Must wait before inquiry
 268   1              _nop_();
 269   1              _nop_();
 270   1              _nop_();
 271   1              _nop_();                                                                //Must wait before inquiry
 272   1              _nop_();
 273   1              while(!(ADC_CONTR & ADC_FLAG));                 //Wait complete flag
 274   1              ADC_CONTR &= ~ADC_FLAG;                                 //Close ADC
 275   1      
 276   1              *value = 0;
 277   1              *value = ADC_RES;
 278   1              *value = ((*value)*4 + ADC_LOW2);               //Return ADC result
 279   1      }
 280          
 281          void choose_display(uchar choose[])
 282          {
 283   1              if(choose == "t_shi_fen")
 284   1              {
 285   2                      read_time();
 286   2                      table[0]=shi/16;
 287   2                      table[1]=shi%16;
 288   2                      table[2]=fen/16;
 289   2                      table[3]=fen%16;
 290   2                      display(1,1);
 291   2                      Delayms(ld);
 292   2              }
 293   1              else if(choose == "t_fen_miao")
 294   1              {
 295   2                      read_time();
 296   2                      table[0]=fen/16;
 297   2                      table[1]=fen%16;
 298   2                      table[2]=miao/16;
 299   2                      table[3]=miao%16;
 300   2                      display(1,1);
 301   2                      Delayms(ld);
 302   2              }
 303   1              else if(choose == "tem")
C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 6   

 304   1              {
 305   2                      if(tem>=10)
 306   2                      {
 307   3                              table[0]=tem/1000;
 308   3                              table[1]=tem%1000/100;
 309   3                              table[2]=tem%1000%100/10;
 310   3                              table[3]=11;
 311   3                      }
 312   2                      else if(tem<10)
 313   2                      {
 314   3                              table[0]=tem%1000/100;
 315   3                              table[1]=tem%1000%100/10;
 316   3                              table[2]=tem%1000%100%10;
 317   3                              table[3]=11;
 318   3                      }
 319   2                      display(1,0);
 320   2                      Delayms(ld);
 321   2              }
 322   1              else if(choose == "lum")
 323   1              {
 324   2                      table[0]=lum%1000/100;
 325   2                      table[1]=lum%1000%100/10;
 326   2                      table[2]=lum%1000%100%10;
 327   2                      table[3]=12;    //第12位显示L
 328   2                      display(-1,0);  //-1即不在任何位置显示小数点
 329   2                      Delayms(ld);
 330   2              }
 331   1              //菜单四和五设置时间的显示
 332   1              else if(choose == "setting")
 333   1              {
 334   2                      display(1,1);
 335   2                      Delayms(ld);
 336   2              }
 337   1      }
 338          
 339          void display_menu()
 340          {
 341   1              //菜单一循环显示
 342   1              //菜单二只显示时间
 343   1              //菜单三只显示温度
 344   1              //菜单四只显示光强度
 345   1              //菜单五调整时
 346   1              //菜单六调整分
 347   1              if(menu==0)
 348   1              {
 349   2                      if(display_min_sec==1)choose_display("t_fen_miao");                     //显示分和秒
 350   2                      else if(display_tem==1)choose_display("tem");                   //一定条件下显示温度
 351   2                      else if(display_lum==1)choose_display("lum");                   //一定条件下显示发光强度
 352   2                      else choose_display("t_shi_fen");                                               //其他条件下显示时和分
 353   2              }
 354   1              if(menu==1)choose_display("t_fen_miao");                                        //显示分和秒
 355   1              if(menu==2)choose_display("tem");                                                       //只显示温度
 356   1              if(menu==3)choose_display("lum");                                                       //只显示光强
 357   1              //调整时
 358   1              if(menu==4)
 359   1              {
 360   2                      //闪烁
 361   2                      if(point_display==1)
 362   2                      {
 363   3                              table[2]=fen/16;
 364   3                              table[3]=fen%16;
 365   3                      }
C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 7   

 366   2                      else
 367   2                      {
 368   3                              table[2]=10;
 369   3                              table[3]=10;
 370   3                      }
 371   2                      table[0]=shi/16;
 372   2                      table[1]=shi%16;
 373   2                      choose_display("setting");
 374   2              }
 375   1              //调整分
 376   1              if(menu==5)
 377   1              {
 378   2                      table[2]=fen/16;
 379   2                      table[3]=fen%16;
 380   2                      //闪烁
 381   2                      if(point_display>0)
 382   2                      {
 383   3                              table[0]=shi/16;
 384   3                              table[1]=shi%16;
 385   3                      }
 386   2                      else
 387   2                      {
 388   3                              table[0]=10;
 389   3                              table[1]=10;
 390   3                      }
 391   2                      choose_display("setting");
 392   2              }
 393   1      }
 394          
 395          //收集温度和光强度
 396          void collect_tem_and_lum()
 397          {
 398   1              //允许采样
 399   1              if(collect==1)
 400   1              {
 401   2                      collect=0;
 402   2                      GetADCResult(2,&lum);           //光敏AD采样
 403   2                      GetADCResult(3,&tem);           //热敏AD采样
 404   2                      tem = (unsigned int) ( ( 3950.0 / ( 11.33657 + log( 6.04 * (float)tem / ( 1024.0 - (float)tem ) ) ) - 27
             -8.15) * 100 );
 405   2              }
 406   1              //光控制显示亮度
 407   1              ld=(lum/50)*5;
 408   1      }
 409          
 410          void key()
 411          {
 412   1              if(sw1==0)
 413   1              {
 414   2                      menu++;
 415   2                      if(menu==6){menu=0;write_time();}
 416   2                      while(sw1==0);//确保松手之前不变
 417   2              }
 418   1              //在时间显示页面，按下sw2就可以初始化时间
 419   1              if(menu==0 || menu==1)
 420   1              {
 421   2                      if(sw2==0)
 422   2                      {
 423   3                              write_ds1302(0x8e,0x00);        //关闭写保护
 424   3                              for(i=0;i<3;i++)write_ds1302(write_add[i],init_ds[i]);  //把最高位值0 允许ds1302工作
 425   3                              write_ds1302(0x8e,0x80);        //打开写保护
 426   3                              while(sw2==0);
C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 8   

 427   3                      }
 428   2              }
 429   1              if(menu==4)
 430   1              {
 431   2                      if(sw2==0)
 432   2                      {
 433   3                              if(fen >= 0x59)fen=0;
 434   3                              else fen=fen+0x01;
 435   3                              if((fen & 0x0f) >= 0x0a)fen = (fen & 0xf0) + 0x10;
 436   3                              while(sw2==0);
 437   3                              miao=0;//秒钟归零
 438   3                      }
 439   2              }
 440   1              if(menu==5)
 441   1              {
 442   2                      if(sw2==0)
 443   2                      {
 444   3                              shi+=0x01;
 445   3                              if((shi & 0x0f) >= 0x0a)shi = (shi & 0xf0) + 0x10;
 446   3                              if(shi >= 0x24)shi = 0;
 447   3                              while(sw2==0);
 448   3                              miao=0;//秒钟归零
 449   3                      }
 450   2              }
 451   1              write_setting();        //断电保存
 452   1      }
 453          
 454          void init()
 455          {
 456   1              uchar i;
 457   1      
 458   1              P2M0=0xFF;
 459   1              P2M1=0x00;
 460   1              P3M0 = 0xF0;
 461   1              P3M1 = 0x00;
 462   1              
 463   1              //init
 464   1              TMOD= 0x01;
 465   1              TL0 = (65536-50000)/256;                //设置定时初值
 466   1              TH0 = (65536-50000)%256;                //设置定时初值
 467   1              ET0 = 1;
 468   1              TR0 = 1;
 469   1              EA  = 1;
 470   1              
 471   1              //InitADC
 472   1              P1ASF = 0x7f;                                   //Open channels ADC function 0100 0000 p1.6使用AD功能
 473   1              ADC_RES  = 0;                                   //Clear previous result
 474   1              ADC_LOW2 = 0;
 475   1              ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
 476   1              
 477   1              //init_ds1302_io
 478   1              rst = 0;        //第一次读写数据时要把IO品拿低
 479   1              clk = 0;
 480   1              io = 0;
 481   1              
 482   1              //init_ds1302
 483   1              //初始化ds1302时间
 484   1              rst = 0;        //第一次读写数据时要把IO品拿低
 485   1              clk = 0;
 486   1              io = 0;
 487   1              i = read_ds1302ram(30);   
 488   1              if(i != 3)
C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 9   

 489   1              {
 490   2                      i = 3;
 491   2                      write_ds1302ram(30,i);
 492   2                      write_ds1302(0x8e,0x00);        //关闭写保护
 493   2                      for(i=0;i<3;i++)
 494   2                              write_ds1302(write_add[i],init_ds[i]);  //把最高位值0 允许ds1302工作
 495   2                      write_ds1302(0x8e,0x80);        //打开写保护
 496   2              }
 497   1      }
 498          
 499          void main()
 500          {
 501   1              init();
 502   1              read_setting();
 503   1              
 504   1              while(1)
 505   1              {
 506   2                      key();
 507   2                      collect_tem_and_lum();
 508   2                      display_menu();
 509   2              }
 510   1      }
 511          
 512          void InitTimer1() interrupt 1   //1毫秒@11.0592MHz
 513          {
 514   1              TL0 = (65536-50000)/256;        //设置定时初值
 515   1              TH0 = (65536-50000)%256;        //设置定时初值
 516   1              
 517   1              two_point_flag++;
 518   1              cycle_display_flag++;
 519   1              AD_collect_flag++;
 520   1              
 521   1              //定时采样光敏和热敏AD采样flag
 522   1              if(AD_collect_flag>20)
 523   1              {
 524   2                      AD_collect_flag=0;
 525   2                      collect=1;
 526   2              }
 527   1              
 528   1              //时钟中间两点闪烁及选择闪烁flag
 529   1              if(two_point_flag==30)
 530   1              {
 531   2                      two_point_flag=0;
 532   2                      point_display=!point_display;//时钟中间两点闪烁及选择闪烁标志位
 533   2              }
 534   1              
 535   1              //菜单一循环显示
 536   1              if(cycle_display_flag>=0 && cycle_display_flag<300)
 537   1              {
 538   2                      display_min_sec=0;
 539   2                      display_tem=0;
 540   2                      display_lum=0;
 541   2              }
 542   1              if(cycle_display_flag>=300 && cycle_display_flag<600)
 543   1              {
 544   2                      display_min_sec=1;
 545   2                      display_tem=0;
 546   2                      display_lum=0;
 547   2              }
 548   1              if(cycle_display_flag>=600 && cycle_display_flag<800)
 549   1              {
 550   2                      display_min_sec=0;
C51 COMPILER V9.59.0.0   MAIN                                                              01/01/2023 11:20:12 PAGE 10  

 551   2                      display_tem=1;
 552   2                      display_lum=0;
 553   2              }
 554   1              if(cycle_display_flag>=800 && cycle_display_flag<1000)
 555   1              {
 556   2                      display_min_sec=0;
 557   2                      display_tem=0;
 558   2                      display_lum=1;
 559   2              }
 560   1              if(cycle_display_flag>=1000)
 561   1              {
 562   2                      cycle_display_flag=0;//重新开始
 563   2              }
 564   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2123    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     90       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
